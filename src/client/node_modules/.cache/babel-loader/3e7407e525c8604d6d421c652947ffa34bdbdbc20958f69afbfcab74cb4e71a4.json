{"ast":null,"code":"var _jsxFileName = \"/Volumes/External disk/Dev/online-judge/src/client/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CLIENT_ID = 'Ov23lix6fJrDjUqWNeFC';\nfunction App() {\n  _s();\n  // forward user to the github screen (pass in the client id)\n  // user in github and login\n  // after that, they got forwarded back to localhost:3000\n  // but the url will be localhost:3000/?code=\n  // use the code to get access token (can only used once)\n  useEffect(() => {\n    const queryStr = window.location.search;\n    const urlParams = new URLSearchParams(queryStr);\n    const codeParam = urlParams.get(\"code\");\n    console.log(codeParam);\n  }, []);\n  function loginWithGitHub() {\n    window.location.assign(\"https://github.com/login/oauth/authorize?client_id=\" + CLIENT_ID);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: loginWithGitHub,\n        children: \"Login with github\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useEffect","jsxDEV","_jsxDEV","CLIENT_ID","App","_s","queryStr","window","location","search","urlParams","URLSearchParams","codeParam","get","console","log","loginWithGitHub","assign","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Volumes/External disk/Dev/online-judge/src/client/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useEffect } from 'react';\n\nconst CLIENT_ID = 'Ov23lix6fJrDjUqWNeFC';\n\nfunction App() {\n  // forward user to the github screen (pass in the client id)\n  // user in github and login\n  // after that, they got forwarded back to localhost:3000\n  // but the url will be localhost:3000/?code=\n  // use the code to get access token (can only used once)\n  useEffect(() => {\n    const queryStr = window.location.search;\n    const urlParams = new URLSearchParams(queryStr);\n    const codeParam = urlParams.get(\"code\");\n    console.log(codeParam);\n  }, []);\n  function loginWithGitHub() {\n    window.location.assign(\"https://github.com/login/oauth/authorize?client_id=\" + CLIENT_ID);\n  }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <button onClick={loginWithGitHub}>\n          Login with github\n        </button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,SAAS,GAAG,sBAAsB;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA;EACA;EACA;EACA;EACAL,SAAS,CAAC,MAAM;IACd,MAAMM,QAAQ,GAAGC,MAAM,CAACC,QAAQ,CAACC,MAAM;IACvC,MAAMC,SAAS,GAAG,IAAIC,eAAe,CAACL,QAAQ,CAAC;IAC/C,MAAMM,SAAS,GAAGF,SAAS,CAACG,GAAG,CAAC,MAAM,CAAC;IACvCC,OAAO,CAACC,GAAG,CAACH,SAAS,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EACN,SAASI,eAAeA,CAAA,EAAG;IACzBT,MAAM,CAACC,QAAQ,CAACS,MAAM,CAAC,qDAAqD,GAAGd,SAAS,CAAC;EAC3F;EACA,oBACED,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBjB,OAAA;MAAQgB,SAAS,EAAC,YAAY;MAAAC,QAAA,eAC5BjB,OAAA;QAAQkB,OAAO,EAAEJ,eAAgB;QAAAG,QAAA,EAAC;MAElC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACnB,EAAA,CAxBQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AA0BZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}